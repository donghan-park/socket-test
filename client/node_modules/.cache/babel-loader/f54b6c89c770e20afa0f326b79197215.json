{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dpark\\\\Desktop\\\\Repos\\\\socket-test\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport io from 'socket.io-client';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(`http://${window.location.hostname}:3001`);\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [displayMsg, setDisplayMsg] = useState(\"\");\n  const [hostRoomName, setHostRoomName] = useState(\"\");\n  const [roomsList, setRoomsList] = useState(['yolo', 'room1']); // client-to-server emitter\n\n  const sendMessage = () => {\n    socket.emit(\"send_msg\", {\n      message\n    });\n  };\n\n  const hostNewRoom = () => {\n    socket.emit(\"host_room\", hostRoomName);\n  }; // server-to-client listener\n\n\n  useEffect(() => {\n    socket.emit(\"get_roomsList\");\n  }, []);\n  useEffect(() => {\n    socket.on(\"receive_roomsList\", data => {\n      setRoomsList(data);\n    });\n    socket.on(\"receive_msg\", data => {\n      setDisplayMsg(data.message);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Message...\",\n      onChange: event => {\n        setMessage(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"display-message\",\n      children: displayMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ROOMS:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-container\",\n      children: roomsList.map(roomName => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"new room name\",\n      onChange: event => {\n        setHostRoomName(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: hostNewRoom,\n      children: \"host room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"pCIXIhWRByjrpByWauWb3uNYGLk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useState","useEffect","socket","window","location","hostname","App","message","setMessage","displayMsg","setDisplayMsg","hostRoomName","setHostRoomName","roomsList","setRoomsList","sendMessage","emit","hostNewRoom","on","data","event","target","value","map","roomName"],"sources":["C:/Users/dpark/Desktop/Repos/socket-test/client/src/App.js"],"sourcesContent":["import './App.css';\nimport io from 'socket.io-client';\nimport {useState, useEffect} from 'react';\n\nconst socket = io(`http://${window.location.hostname}:3001`);\n\nfunction App() {\n\n    const [ message, setMessage ] = useState(\"\");\n    const [ displayMsg, setDisplayMsg ] = useState(\"\");\n\n    const [ hostRoomName, setHostRoomName ] = useState(\"\");\n\n    const [ roomsList, setRoomsList ] = useState(['yolo', 'room1']);\n\n    // client-to-server emitter\n    const sendMessage = () => {\n        socket.emit(\"send_msg\", { message });\n    };\n\n    const hostNewRoom = () => {\n        socket.emit(\"host_room\", hostRoomName);\n    }\n\n    // server-to-client listener\n    useEffect(() => {\n        socket.emit(\"get_roomsList\");\n    }, []);\n\n    useEffect(() => {\n        socket.on(\"receive_roomsList\", (data) => {\n            setRoomsList(data);\n        })\n        socket.on(\"receive_msg\", (data) => {\n            setDisplayMsg(data.message);\n        });\n    }, [socket]);\n\n    return (\n        <div className=\"App\">\n            <input \n                placeholder=\"Message...\" \n                onChange={(event) => {\n                    setMessage(event.target.value);\n                }}\n            />\n            <button onClick={sendMessage}>Send Message</button>\n            <p className=\"display-message\">{displayMsg}</p>\n            <h1>ROOMS:</h1>\n            <div className=\"rooms-container\">\n                {roomsList.map(roomName => {\n                    return <p>{roomName}</p>\n                })}\n            </div>\n            <input placeholder='new room name' \n                onChange={(event) => {\n                    setHostRoomName(event.target.value);\n                }}\n            />\n            <button onClick={hostNewRoom}>host room</button>\n        </div>\n    );    \n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,EAAP,MAAe,kBAAf;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,MAAMC,MAAM,GAAGH,EAAE,CAAE,UAASI,MAAM,CAACC,QAAP,CAAgBC,QAAS,OAApC,CAAjB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEX,MAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAAES,UAAF,EAAcC,aAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;EAEA,MAAM,CAAEW,YAAF,EAAgBC,eAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;EAEA,MAAM,CAAEa,SAAF,EAAaC,YAAb,IAA8Bd,QAAQ,CAAC,CAAC,MAAD,EAAS,OAAT,CAAD,CAA5C,CAPW,CASX;;EACA,MAAMe,WAAW,GAAG,MAAM;IACtBb,MAAM,CAACc,IAAP,CAAY,UAAZ,EAAwB;MAAET;IAAF,CAAxB;EACH,CAFD;;EAIA,MAAMU,WAAW,GAAG,MAAM;IACtBf,MAAM,CAACc,IAAP,CAAY,WAAZ,EAAyBL,YAAzB;EACH,CAFD,CAdW,CAkBX;;;EACAV,SAAS,CAAC,MAAM;IACZC,MAAM,CAACc,IAAP,CAAY,eAAZ;EACH,CAFQ,EAEN,EAFM,CAAT;EAIAf,SAAS,CAAC,MAAM;IACZC,MAAM,CAACgB,EAAP,CAAU,mBAAV,EAAgCC,IAAD,IAAU;MACrCL,YAAY,CAACK,IAAD,CAAZ;IACH,CAFD;IAGAjB,MAAM,CAACgB,EAAP,CAAU,aAAV,EAA0BC,IAAD,IAAU;MAC/BT,aAAa,CAACS,IAAI,CAACZ,OAAN,CAAb;IACH,CAFD;EAGH,CAPQ,EAON,CAACL,MAAD,CAPM,CAAT;EASA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI;MACI,WAAW,EAAC,YADhB;MAEI,QAAQ,EAAGkB,KAAD,IAAW;QACjBZ,UAAU,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;MACH;IAJL;MAAA;MAAA;MAAA;IAAA,QADJ,eAOI;MAAQ,OAAO,EAAEP,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ,eAQI;MAAG,SAAS,EAAC,iBAAb;MAAA,UAAgCN;IAAhC;MAAA;MAAA;MAAA;IAAA,QARJ,eASI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATJ,eAUI;MAAK,SAAS,EAAC,iBAAf;MAAA,UACKI,SAAS,CAACU,GAAV,CAAcC,QAAQ,IAAI;QACvB,oBAAO;UAAA,UAAIA;QAAJ;UAAA;UAAA;UAAA;QAAA,QAAP;MACH,CAFA;IADL;MAAA;MAAA;MAAA;IAAA,QAVJ,eAeI;MAAO,WAAW,EAAC,eAAnB;MACI,QAAQ,EAAGJ,KAAD,IAAW;QACjBR,eAAe,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;MACH;IAHL;MAAA;MAAA;MAAA;IAAA,QAfJ,eAoBI;MAAQ,OAAO,EAAEL,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QApBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAwBH;;GAxDQX,G;;KAAAA,G;AA0DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}