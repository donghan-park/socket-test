{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dpark\\\\Desktop\\\\Repos\\\\socket-test\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport io from 'socket.io-client';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(`http://${window.location.hostname}:3001`);\nsocket.on(\"receive_roomsList\", data => {\n  console.log('rooms list received');\n  setRoomsList(data);\n});\nsocket.on(\"receive_msg\", data => {\n  setDisplayMsg(data);\n});\nsocket.on(\"receive_current_room\", data => {\n  setCurrentRoom(data);\n});\nsocket.on('invalid_room', () => {\n  console.log('invalid room name');\n});\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [displayMsg, setDisplayMsg] = useState(\"\");\n  const [hostRoomName, setHostRoomName] = useState(\"\");\n  const [roomsList, setRoomsList] = useState([]);\n  const [currentRoom, setCurrentRoom] = useState(\"\"); // client-to-server emitter\n\n  const sendMessage = () => {\n    socket.emit(\"send_msg\", message);\n  };\n\n  const hostNewRoom = () => {\n    socket.emit(\"host_room\", hostRoomName);\n  };\n\n  const onKeyEnter = (e, func) => {\n    if (e.key === 'Enter') {\n      func();\n      e.target.value = \"\";\n    }\n  };\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      socket.emit('get_roomsList');\n      socket.emit('get_current_room');\n    });\n  }, []);\n\n  const joinNewRoom = roomName => {\n    socket.emit(\"join_room\", roomName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Message...\",\n      onChange: event => setMessage(event.target.value),\n      onKeyDown: event => {\n        onKeyEnter(event, sendMessage);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"display-message\",\n      children: displayMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ROOMS:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-container\",\n      children: roomsList.length > 0 ? roomsList.map(roomName => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => joinNewRoom(roomName),\n          children: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 28\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no rooms found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"new room name\",\n      onChange: event => setHostRoomName(event.target.value),\n      onKeyDown: event => onKeyEnter(event, hostNewRoom)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: hostNewRoom,\n      children: \"host room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"current-room-indicator\",\n      children: [\"Current room: \", currentRoom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"i5gJKGO4JQzqaPzwJnafAcpTAq8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useState","useEffect","socket","window","location","hostname","on","data","console","log","setRoomsList","setDisplayMsg","setCurrentRoom","App","message","setMessage","displayMsg","hostRoomName","setHostRoomName","roomsList","currentRoom","sendMessage","emit","hostNewRoom","onKeyEnter","e","func","key","target","value","joinNewRoom","roomName","event","length","map"],"sources":["C:/Users/dpark/Desktop/Repos/socket-test/client/src/App.js"],"sourcesContent":["import './App.css';\nimport io from 'socket.io-client';\nimport {useState, useEffect} from 'react';\n\nconst socket = io(`http://${window.location.hostname}:3001`);\n\nsocket.on(\"receive_roomsList\", (data) => {\n    console.log('rooms list received')\n    setRoomsList(data);\n});\nsocket.on(\"receive_msg\", (data) => {\n    setDisplayMsg(data);\n});\nsocket.on(\"receive_current_room\", (data) => {\n    setCurrentRoom(data);\n});\nsocket.on('invalid_room', () => {\n    console.log('invalid room name');\n})\n\nfunction App() {\n\n    const [ message, setMessage ] = useState(\"\");\n    const [ displayMsg, setDisplayMsg ] = useState(\"\");\n\n    const [ hostRoomName, setHostRoomName ] = useState(\"\");\n\n    const [ roomsList, setRoomsList ] = useState([]);\n\n    const [ currentRoom, setCurrentRoom ] = useState(\"\");\n\n    // client-to-server emitter\n    const sendMessage = () => {\n        socket.emit(\"send_msg\", message);\n    };\n\n    const hostNewRoom = () => {\n        socket.emit(\"host_room\", hostRoomName);\n    };\n\n    const onKeyEnter = (e, func) => {\n        if(e.key === 'Enter'){\n            func();\n            e.target.value = \"\";\n        }\n    }\n\n    useEffect(() => {\n        socket.on('connect', () => {\n            socket.emit('get_roomsList');\n            socket.emit('get_current_room');\n        });\n        \n    }, []);\n\n    const joinNewRoom = (roomName) => {\n        socket.emit(\"join_room\", roomName);\n    }\n\n    return (\n        <div className=\"App\">\n            <input \n                placeholder=\"Message...\" \n                onChange={(event) => setMessage(event.target.value)}\n                onKeyDown={(event) => {\n                    onKeyEnter(event, sendMessage);\n                }}\n            />\n            <button onClick={sendMessage}>Send Message</button>\n            <p className=\"display-message\">{displayMsg}</p>\n            <h1>ROOMS:</h1>\n            <div className=\"rooms-container\">\n                {roomsList.length > 0 ?\n                roomsList.map(roomName => {\n                    return <p onClick={() => joinNewRoom(roomName)}>{roomName}</p>\n                }) : <p>no rooms found</p>}\n            </div>\n            <input placeholder='new room name' \n                onChange={(event) => setHostRoomName(event.target.value)}\n                onKeyDown={(event) => onKeyEnter(event, hostNewRoom)}\n            />\n            <button onClick={hostNewRoom}>host room</button>\n            <p className=\"current-room-indicator\">Current room: {currentRoom}</p>\n        </div>\n    );    \n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,EAAP,MAAe,kBAAf;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,MAAMC,MAAM,GAAGH,EAAE,CAAE,UAASI,MAAM,CAACC,QAAP,CAAgBC,QAAS,OAApC,CAAjB;AAEAH,MAAM,CAACI,EAAP,CAAU,mBAAV,EAAgCC,IAAD,IAAU;EACrCC,OAAO,CAACC,GAAR,CAAY,qBAAZ;EACAC,YAAY,CAACH,IAAD,CAAZ;AACH,CAHD;AAIAL,MAAM,CAACI,EAAP,CAAU,aAAV,EAA0BC,IAAD,IAAU;EAC/BI,aAAa,CAACJ,IAAD,CAAb;AACH,CAFD;AAGAL,MAAM,CAACI,EAAP,CAAU,sBAAV,EAAmCC,IAAD,IAAU;EACxCK,cAAc,CAACL,IAAD,CAAd;AACH,CAFD;AAGAL,MAAM,CAACI,EAAP,CAAU,cAAV,EAA0B,MAAM;EAC5BE,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,CAFD;;AAIA,SAASI,GAAT,GAAe;EAAA;;EAEX,MAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAAEgB,UAAF,EAAcL,aAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;EAEA,MAAM,CAAEiB,YAAF,EAAgBC,eAAhB,IAAoClB,QAAQ,CAAC,EAAD,CAAlD;EAEA,MAAM,CAAEmB,SAAF,EAAaT,YAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;EAEA,MAAM,CAAEoB,WAAF,EAAeR,cAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD,CATW,CAWX;;EACA,MAAMqB,WAAW,GAAG,MAAM;IACtBnB,MAAM,CAACoB,IAAP,CAAY,UAAZ,EAAwBR,OAAxB;EACH,CAFD;;EAIA,MAAMS,WAAW,GAAG,MAAM;IACtBrB,MAAM,CAACoB,IAAP,CAAY,WAAZ,EAAyBL,YAAzB;EACH,CAFD;;EAIA,MAAMO,UAAU,GAAG,CAACC,CAAD,EAAIC,IAAJ,KAAa;IAC5B,IAAGD,CAAC,CAACE,GAAF,KAAU,OAAb,EAAqB;MACjBD,IAAI;MACJD,CAAC,CAACG,MAAF,CAASC,KAAT,GAAiB,EAAjB;IACH;EACJ,CALD;;EAOA5B,SAAS,CAAC,MAAM;IACZC,MAAM,CAACI,EAAP,CAAU,SAAV,EAAqB,MAAM;MACvBJ,MAAM,CAACoB,IAAP,CAAY,eAAZ;MACApB,MAAM,CAACoB,IAAP,CAAY,kBAAZ;IACH,CAHD;EAKH,CANQ,EAMN,EANM,CAAT;;EAQA,MAAMQ,WAAW,GAAIC,QAAD,IAAc;IAC9B7B,MAAM,CAACoB,IAAP,CAAY,WAAZ,EAAyBS,QAAzB;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI;MACI,WAAW,EAAC,YADhB;MAEI,QAAQ,EAAGC,KAAD,IAAWjB,UAAU,CAACiB,KAAK,CAACJ,MAAN,CAAaC,KAAd,CAFnC;MAGI,SAAS,EAAGG,KAAD,IAAW;QAClBR,UAAU,CAACQ,KAAD,EAAQX,WAAR,CAAV;MACH;IALL;MAAA;MAAA;MAAA;IAAA,QADJ,eAQI;MAAQ,OAAO,EAAEA,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ,eASI;MAAG,SAAS,EAAC,iBAAb;MAAA,UAAgCL;IAAhC;MAAA;MAAA;MAAA;IAAA,QATJ,eAUI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVJ,eAWI;MAAK,SAAS,EAAC,iBAAf;MAAA,UACKG,SAAS,CAACc,MAAV,GAAmB,CAAnB,GACDd,SAAS,CAACe,GAAV,CAAcH,QAAQ,IAAI;QACtB,oBAAO;UAAG,OAAO,EAAE,MAAMD,WAAW,CAACC,QAAD,CAA7B;UAAA,UAA0CA;QAA1C;UAAA;UAAA;UAAA;QAAA,QAAP;MACH,CAFD,CADC,gBAGI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAJT;MAAA;MAAA;MAAA;IAAA,QAXJ,eAiBI;MAAO,WAAW,EAAC,eAAnB;MACI,QAAQ,EAAGC,KAAD,IAAWd,eAAe,CAACc,KAAK,CAACJ,MAAN,CAAaC,KAAd,CADxC;MAEI,SAAS,EAAGG,KAAD,IAAWR,UAAU,CAACQ,KAAD,EAAQT,WAAR;IAFpC;MAAA;MAAA;MAAA;IAAA,QAjBJ,eAqBI;MAAQ,OAAO,EAAEA,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QArBJ,eAsBI;MAAG,SAAS,EAAC,wBAAb;MAAA,6BAAqDH,WAArD;IAAA;MAAA;MAAA;MAAA;IAAA,QAtBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA0BH;;GAjEQP,G;;KAAAA,G;AAmET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}