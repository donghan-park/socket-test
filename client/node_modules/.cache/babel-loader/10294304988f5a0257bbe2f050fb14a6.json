{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dpark\\\\Desktop\\\\Repos\\\\socket-test\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport io from 'socket.io-client';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(`http://${window.location.hostname}:3001`);\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [displayMsg, setDisplayMsg] = useState(\"\");\n  const [hostRoomName, setHostRoomName] = useState(\"\");\n  const [roomsList, setRoomsList] = useState(['yolo', 'room1']);\n  const [currentRoom, setCurrentRoom] = useState(\"\"); // client-to-server emitter\n\n  const sendMessage = () => {\n    socket.emit(\"send_msg\", message);\n  };\n\n  const hostNewRoom = () => {\n    socket.emit(\"host_room\", hostRoomName);\n  };\n\n  const onKeyEnter = (e, funcName) => {\n    console.log(e.key);\n\n    if (e.key === 'Enter') {\n      funcName();\n    }\n  };\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      socket.emit('get_roomsList');\n      socket.emit('get_current_room');\n    });\n    socket.on(\"receive_roomsList\", data => {\n      setRoomsList(data);\n    });\n    socket.on(\"receive_msg\", data => {\n      setDisplayMsg(data);\n    });\n    socket.on(\"receive_current_room\", data => {\n      setCurrentRoom(data);\n    });\n  }, [socket]);\n\n  const joinNewRoom = roomName => {\n    socket.emit(\"join_room\", roomName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Message...\",\n      onChange: event => setMessage(event.target.value),\n      onKeyDown: event => {\n        onKeyEnter(event, sendMessage);\n        event.target.value = \"\";\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"display-message\",\n      children: displayMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ROOMS:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-container\",\n      children: roomsList.length > 0 ? roomsList.map(roomName => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => joinNewRoom(roomName),\n          children: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 28\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no rooms found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"new room name\",\n      onChange: event => setHostRoomName(event.target.value),\n      onKeyDown: event => onKeyEnter(event, hostNewRoom)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: hostNewRoom,\n      children: \"host room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"current-room-indicator\",\n      children: [\"Current room: \", currentRoom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"1T5JSESkVTGCnQ8vS/4a9UL9y/Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useState","useEffect","socket","window","location","hostname","App","message","setMessage","displayMsg","setDisplayMsg","hostRoomName","setHostRoomName","roomsList","setRoomsList","currentRoom","setCurrentRoom","sendMessage","emit","hostNewRoom","onKeyEnter","e","funcName","console","log","key","on","data","joinNewRoom","roomName","event","target","value","length","map"],"sources":["C:/Users/dpark/Desktop/Repos/socket-test/client/src/App.js"],"sourcesContent":["import './App.css';\nimport io from 'socket.io-client';\nimport {useState, useEffect} from 'react';\n\nconst socket = io(`http://${window.location.hostname}:3001`);\n\nfunction App() {\n\n    const [ message, setMessage ] = useState(\"\");\n    const [ displayMsg, setDisplayMsg ] = useState(\"\");\n\n    const [ hostRoomName, setHostRoomName ] = useState(\"\");\n\n    const [ roomsList, setRoomsList ] = useState(['yolo', 'room1']);\n\n    const [ currentRoom, setCurrentRoom ] = useState(\"\");\n\n    // client-to-server emitter\n    const sendMessage = () => {\n        socket.emit(\"send_msg\", message);\n    };\n\n    const hostNewRoom = () => {\n        socket.emit(\"host_room\", hostRoomName);\n    };\n\n    const onKeyEnter = (e, funcName) => {\n        console.log(e.key);\n        if(e.key === 'Enter'){\n            funcName();\n        }\n    }\n\n    useEffect(() => {\n        socket.on('connect', () => {\n            socket.emit('get_roomsList');\n            socket.emit('get_current_room');\n        });\n        socket.on(\"receive_roomsList\", (data) => {\n            setRoomsList(data);\n        });\n        socket.on(\"receive_msg\", (data) => {\n            setDisplayMsg(data);\n        });\n        socket.on(\"receive_current_room\", (data) => {\n            setCurrentRoom(data);\n        });\n    }, [socket]);\n\n    const joinNewRoom = (roomName) => {\n        socket.emit(\"join_room\", roomName);\n    }\n\n    return (\n        <div className=\"App\">\n            <input \n                placeholder=\"Message...\" \n                onChange={(event) => setMessage(event.target.value)}\n                onKeyDown={(event) => {\n                    onKeyEnter(event, sendMessage);\n                    event.target.value = \"\";\n                }}\n            />\n            <button onClick={sendMessage}>Send Message</button>\n            <p className=\"display-message\">{displayMsg}</p>\n            <h1>ROOMS:</h1>\n            <div className=\"rooms-container\">\n                {roomsList.length > 0 ?\n                roomsList.map(roomName => {\n                    return <p onClick={() => joinNewRoom(roomName)}>{roomName}</p>\n                }) : <p>no rooms found</p>}\n            </div>\n            <input placeholder='new room name' \n                onChange={(event) => setHostRoomName(event.target.value)}\n                onKeyDown={(event) => onKeyEnter(event, hostNewRoom)}\n            />\n            <button onClick={hostNewRoom}>host room</button>\n            <p className=\"current-room-indicator\">Current room: {currentRoom}</p>\n        </div>\n    );    \n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}